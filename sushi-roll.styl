// given a unit, return it without the unit
unitless(value)
  return unit(value, '')

// chop property
chop(size = null, align = null)

  // align optionally
  if align is not null
    align-self: align

  // hidden chop
  if size is not null
    if size is hide
      display: none
    else if size is fit
      flex: 0 0 auto
    else if size is fit-shrink
      flex: 0 1 auto
    else if size is fit-grow
      flex: 1 0 auto
    else if size is spread
      flex: 1 1 auto
    else if size is a 'unit'
      if unit(size) is 'spread'
        flex: unit(size, '') 1 size
      flex: 0 1 size
    else
      flex: size

// main handler of sushi-roll property
sushi-roll-main()

  // only one chop means they should all act the same
  // this way, we can use a 0100 selector instead of 0110
  // https://specificity.keegan.st/
  if length(arguments) is 1
    > *
      chop: arguments[0]
    return

  // two or more chops
  for arg, idx in arguments
    > :nth-child({idx + 1})
      chop: arg

// sushi-roll container
sushi-roll()
  display: flex
  sushi-roll-main: arguments

// inline sushi-roll container
sushi-roll-inline()
  display: inline-flex
  sushi-roll-main: arguments

sushi-align()
  align-items: arguments

sushi-justify()
  justify-content: arguments

chop-align()
  align-self: arguments
